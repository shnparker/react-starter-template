name: push-main

on:
  push:
    branches:
      - main

env:
  VITE_APP_API_URL: ${{ vars.PROD_API_URL }}

jobs:
  verify:
    runs-on: ubuntu-latest
    concurrency:
      group: ci-${{ github.ref_name }}-verify
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup environment
        uses: ./.github/actions/setup/

      - name: Check code quality
        shell: bash
        run: yarn run lint:check

      - name: Check formatting
        shell: bash
        run: yarn run format:check

  unit-test:
    permissions:
      checks: write
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    concurrency:
      group: ci-${{ github.ref_name }}-test
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup environment
        uses: ./.github/actions/setup/

      - name: Run unit tests
        shell: bash
        run: yarn run test

  deploy:
    runs-on: ubuntu-latest
    needs: [e2e-test]
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    concurrency:
      group: ci-${{ github.ref_name }}-deploy
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup environment
        uses: ./.github/actions/setup/

      - name: Install Vercel CLI
        run: yarn global add vercel@latest

      - name: Pull Vercel environment information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build project artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy project artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
